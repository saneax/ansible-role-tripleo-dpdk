---
# tasks file for kvm-nested
- when: target == "destroy"
  block:
    - name: Fetch current runtime nested setting
      command: cat /sys/module/kvm_{{ cpu_vendor }}/parameters/nested
      register: kvm_nested_info
      changed_when: false

    - name: Check again if nested is enabled currently
      set_fact:
        cpu_nested_enabled: "{{ true if 'Y' in kvm_nested_info.stdout else
                                true if '1' in kvm_nested_info.stdout else false }}"

    - name: In destroy block of kvm-nested role, not required, hence publishing the state only
      debug: var=kvm_nested_info.stdout

- when: target == "setup"
  block:
    - name: Set CPU vendor
      set_fact:
        cpu_vendor: "{{ 'intel' if 'Intel' in ansible_processor|join('') else
                        'amd' if 'AMD' in ansible_processor|join('') else 'unknown' }}"

    - name: Get CPU flags
      command: "awk -F: '/^flags/ {print $2; exit}' /proc/cpuinfo"
      register: cpu_flags_cmd
      changed_when: false

    - name: Check for nested support
      set_fact:
        cpu_nested_support: "{{ true if cpu_vendor == 'intel' and 'vmx' in cpu_flags_cmd.stdout.split() else
                                true if cpu_vendor == 'amd' and 'svm' in cpu_flags_cmd.stdout.split() else false }}"

    - name: Disable nested if not supported
      set_fact:
        nested: "{{ false if not cpu_nested_support|bool else nested }}"

    - name: Remove previous KVM modprobe configs
      shell: find /etc/modprobe.d/ -type f -print0| xargs -r -0 sed -i '/^options kvm_intel/d;/^options kvm_amd/d'
      become: true
      changed_when: true

    - name: Configure KVM module
      copy:
        dest: "/etc/modprobe.d/kvm.conf"
        content: |
          options kvm_{{ cpu_vendor }} nested={{ nested|bool|ternary('1', '0') }}
      become: true

    - name: Fetch current runtime nested setting
      command: cat /sys/module/kvm_{{ cpu_vendor }}/parameters/nested
      register: kvm_nested_info
      changed_when: false
      when: nested|bool

    - name: Set fact for nested to false if virtualization is not enabled
      set_fact:
        cpu_nested_enabled: false
      when: not nested|bool

    - name: Check if nested is enabled currently
      set_fact:
        cpu_nested_enabled: "{{ true if 'Y' in kvm_nested_info.stdout else
                                true if '1' in kvm_nested_info.stdout else false }}"
      when: nested|bool

    - when: nested|bool != cpu_nested_enabled|bool
      block:
        - name: Unload KVM module
          modprobe:
            name: "kvm_{{ cpu_vendor }}"
            state: "absent"
          become: true

        - name: Reload KVM module
          modprobe:
            name: "kvm_{{ cpu_vendor }}"
            state: "present"
          become: true

        - name: Fetch current runtime nested setting
          command: cat /sys/module/kvm_{{ cpu_vendor }}/parameters/nested
          register: kvm_nested_info
          changed_when: false

        - name: Check again if nested is enabled currently
          set_fact:
            cpu_nested_enabled: "{{ true if 'Y' in kvm_nested_info.stdout else
                                    true if '1' in kvm_nested_info.stdout else false }}"
        - name: Fail when the desired and actual state do not match
          fail:
            msg: "Cannot change the state of nested virtualization. Please shut down any running VMs."
          when: nested|bool != cpu_nested_enabled|bool
