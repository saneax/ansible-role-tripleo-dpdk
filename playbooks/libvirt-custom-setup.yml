# This playbook only lets you create the VM's undercloud and overcloud.
# Many times you just need to create the VM's - please use it with
# custom-libvirt-teardown.yml (which is useful to teardown all the VM's)-
# To use this
# /quickstart.sh -p custom-libvirt-setup.yml -b -n -w $VIRTHOST

- name: Add the virthost to the inventory
  hosts: localhost
  tasks:
    - name: Add virthost
      add_host:
        name: "{{virthost}}"
        groups: "virthost"
        ansible_fqdn: "{{ virthost }}"
        ansible_user: "root"
        ansible_host: "{{ virthost }}"
  tags:
    - provision


- include: teardown-environment.yml
- include: teardown-provision.yml

# The `provision.yml` playbook is responsible for
# creating an inventory entry for our `virthost` and for creating an
# unprivileged user on that host for use by our virtual environment.
- include: provision.yml

# These teardown tasks only make sense after running provision.yml,
# because they assume they are connecting as the `stack` user rather
# than `root`.
- include: teardown-nodes.yml
- include: teardown-environment.yml

- name: Install libvirt packages and configure networks
  hosts: virthost
  gather_facts: yes
  tags:
    - environment
  roles:
    - environment/setup


- name:  Setup undercloud, overcloud, and supplemental vms
  hosts: virthost
  gather_facts: yes
  roles:
    - libvirt/setup

- name: Add nodes to the generated inventory
  hosts: localhost
  gather_facts: yes
  roles:
    - tripleo-inventory

- name: Copy undercloud-convert.sh
  hosts: virthost
  tasks:
    - copy:
        src: "scripts/undercloud-convert.sh"
        dest: "{{ working_dir }}/undercloud_convert.sh"

- name: |
    Run a script inside an image via virt-customize without extracting anything
  hosts: virthost
  vars:
    image_to_modify: "{{ working_dir }}/undercloud.qcow2"
    modify_script: "{{ working_dir }}/undercloud_convert.sh"
  roles:
    - modify-image


- name:  Deploy the undercloud
  hosts: undercloud
  gather_facts: no
  roles:
    - undercloud-deploy
